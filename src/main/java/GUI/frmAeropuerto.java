/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package GUI;

import clases.Aeropuerto;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import util.AdminSerializacion;

/**
 *
 * @author Iveth
 */
public class frmAeropuerto extends javax.swing.JInternalFrame {

    /**
     * Creates new form frmAeropuerto
     */
    
    //Atributos 
    private boolean _agregando;
    private int _indiceSeleccion=-1;
    
    //constructor
    public frmAeropuerto() {
        initComponents();
        this.setTitle("Gesti√≥n Aeropuerto");
        try{
            actualizarElementosTabla();
        }catch(Exception e){
        System.out.println("Error al actualizar los elementos"+e.getMessage());
        }
         
 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtCiudad = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtPais = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtAeropuertos = new javax.swing.JTable();
        btnEditar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);

        jLabel1.setText("Codigo");

        txtCodigo.setEditable(false);
        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });

        jLabel2.setText("Pais");

        txtCiudad.setEditable(false);

        jLabel3.setText("Nombre");

        jLabel4.setText("Ciudad");

        txtPais.setEditable(false);

        txtNombre.setEditable(false);

        jtAeropuertos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtAeropuertos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jtAeropuertosMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(jtAeropuertos);

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.setEnabled(false);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnNuevo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnGuardar)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminar)
                        .addGap(18, 18, 18)
                        .addComponent(btnBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSalir))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(81, 81, 81)
                            .addComponent(txtPais, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(75, 75, 75)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(txtPais, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevo)
                    .addComponent(btnEditar)
                    .addComponent(btnGuardar)
                    .addComponent(btnEliminar)
                    .addComponent(btnBuscar)
                    .addComponent(btnSalir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(210, 210, 210))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        this._agregando=false;
        estadoControles(true);
        estadoBotones(false);
        
        this.txtCodigo.setEditable(false);
        
        
        
    }//GEN-LAST:event_btnEditarActionPerformed

    private void jtAeropuertosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtAeropuertosMousePressed
        _indiceSeleccion = this.jtAeropuertos.getSelectedRow();

        if(_indiceSeleccion!= -1){
            Aeropuerto _aeropuerto = MDIPrincipal.gAeropuerto.getAeroByIndex(_indiceSeleccion);
            mostrarElemento(_aeropuerto);
        }
    }//GEN-LAST:event_jtAeropuertosMousePressed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        String _codigoAeropuerto=JOptionPane.showInputDialog("Ingrese el c√≥digo de Aeropuerto");
        
        Aeropuerto _aeropuertoEncontrado=MDIPrincipal.gAeropuerto.buscarAeroObj(_codigoAeropuerto);
        if(_aeropuertoEncontrado==null){
            JOptionPane.showMessageDialog(this, "Aeropuerto no encontrado"); 

        }else{
             mostrarElemento(_aeropuertoEncontrado);
        }
        
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
         //pasos 1,2 y 3 son pasos comunes

        //paso 1.
        String codigo, nombre, pais,ciudad;

        codigo=this.txtCodigo.getText();
        pais=this.txtPais.getText();//getText: obtener el texto actual, setText: para establecer eltexto
        nombre=this.txtNombre.getText();
        ciudad=this.txtCiudad.getText();
        

        //paso 2.
        Aeropuerto aeropuerto = new Aeropuerto();
        
        
        try{
            
            //paso 3.
            aeropuerto.set_codigo(codigo);
            aeropuerto.set_pais(pais);
            aeropuerto.set_nombre(nombre);
            aeropuerto.set_ciudad(ciudad);

            if (this._agregando) { //Nuevo Aeropuerto

                //pasos para agregar
                /**
                 * 1. Solicitar los valores al usuario 2. Crear la instancia 3.
                 * setear los valores de la instancia 4. Agregar la instancia de
                 * Aeropuerto a la gestion 5. Mostrar los valores
                 */
                
                //paso 4.
                MDIPrincipal.gAeropuerto.agregarAero(aeropuerto); //Agregando la instancia de Aeropuerto a la gestion, con el metodo de Agregar

            } else {//Editando Aeropuerto

                //pasos para Modificar
                /**
                 * 1. Solicitar los nuevos valores al usuario 2. Crear la
                 * instancia modificada 3. setear los valores de la instancia
                 * modificada 4. Modificar la instancia de Aeropuerto a la
                 * gestion 5. Mostrar los valores en la tabla
                 */
                //paso 4.
                MDIPrincipal.gAeropuerto.modificarAero(this._indiceSeleccion, aeropuerto);

            }

            //paso 5. tambien es un paso comun para agregar y modificar
            actualizarElementosTabla();
            estadoControles(false);
            estadoBotones(true);

            //PASO 6: Serializar la informacion
            AdminSerializacion.serializacion(MDIPrincipal.gAeropuerto, "gAeropuerto.obj");

        
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Ha ocurrido un error" +e.getMessage());
        }
       

    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
       
        if(_indiceSeleccion>=0){
         int resultado = JOptionPane.showConfirmDialog(null, "¬øEst√° seguro?", "Warning", JOptionPane.YES_NO_OPTION);
                if(resultado==JOptionPane.YES_OPTION){
                try{
                    MDIPrincipal.gAeropuerto.eliminarPorIndice(_indiceSeleccion);
                    actualizarElementosTabla();
                    //Paso para Serializar informacion
                   AdminSerializacion.serializacion(MDIPrincipal.gAeropuerto, "gAeropuerto.obj");
                }catch(Exception e){
                    JOptionPane.showMessageDialog(this,"Ha ocurrido un error al eliminar"+e.getMessage());
                }
            }
        }
        else{
           JOptionPane.showMessageDialog(this, "Favor seleccione el elemento de la tabla que desea eliminar"); 
        }    
        
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtCodigoActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        this._agregando=true;
        
        estadoControles(true);
        estadoBotones(false);
        
        this.txtCodigo.setText("");
        this.txtPais.setText("");
        this.txtNombre.setText("");
        this.txtCiudad.setText("");
        
        
        

    }//GEN-LAST:event_btnNuevoActionPerformed

            //Metodo para configurar la informacion en la tabla
    
            public void actualizarElementosTabla(){
                
                String [] titulos ={"C√≥digo","Pa√≠s","Nombre","Ciudad"};
                
                DefaultTableModel dt = new DefaultTableModel(MDIPrincipal.gAeropuerto.getArrayGestion(),titulos);
                
                this.jtAeropuertos.setModel(dt);
                
                
                
            }
            
    /**
     * Muestra los elementos en pantalla segun el objeto enviado
     * @param _aeropuerto objeto Aeropuerto
     */
    public void mostrarElemento(Aeropuerto _aeropuerto){
        this.txtCodigo.setText(_aeropuerto.get_codigo());
        this.txtPais.setText(_aeropuerto.get_pais());
        this.txtNombre.setText(_aeropuerto.get_nombre());
        this.txtCiudad.setText(_aeropuerto.get_ciudad());
        
    }
    
    public void estadoControles(boolean _estado){
        this.txtCodigo.setEditable(_estado);
        this.txtPais.setEditable(_estado);
        this.txtNombre.setEditable(_estado);
        this.txtCiudad.setEditable(_estado);
        
        
    }
    
    public void estadoBotones(boolean _estado){
        this.btnBuscar.setEnabled(_estado);
        this.btnEditar.setEnabled(_estado);
        this.btnEliminar.setEnabled(_estado);
        this.btnGuardar.setEnabled(!_estado);
        this.btnNuevo.setEnabled(_estado);
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jtAeropuertos;
    private javax.swing.JTextField txtCiudad;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPais;
    // End of variables declaration//GEN-END:variables
}
