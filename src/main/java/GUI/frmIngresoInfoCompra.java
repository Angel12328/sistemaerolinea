/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package GUI;

import Gestiones.GestionAsientos;
import Gestiones.GestionPasajero;
import clases.Asientos;
import clases.Pasajero;
import clases.Vuelo;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import util.AdminSerializacion;

/**
 *
 * @author angel
 */
public class frmIngresoInfoCompra extends javax.swing.JInternalFrame {

    /**
     * Creates new form frmPasajerosVuelo
     */
    private int _indiceSeleccion=-1;
    private int _indiceSeleccionAs=-1;
    private int _posicionCompra =0;
    private int _numPsjrsCache=0;
    
    
    private int numPasajerosCache=0;
    // si falla ponerlo en guardar pasajeros (linea 29)
    private Vuelo vuelo;
    
    private boolean _agregando;
    private boolean _agregandoAsiento;
    private int cte=1;
    
    //EXTRAE LA COMPRA A LA QUE SE LE ESTA INGRESANDO INFORMACION
    Vuelo vueloCompra=new Vuelo();
    
    
    public frmIngresoInfoCompra() {
        inicio(vueloCompra);
        initComponents();
        try{
            this.cboTipoPasajero.setModel(MDIPrincipal.gPasajero.getCboModel());
        }catch (Exception e){}
        
        try{
            this.cboTipoAsiento.setModel(vueloCompra.getCboCategoriaAsntoModel());
        }catch (Exception e){}

           
    }
        


   
    public void inicio(Vuelo vuelo){
        int centinela = MDIPrincipal.gCarrito.getControlPosiciones().size();
        if(centinela>0){
            vueloCompra=MDIPrincipal.gVuelo.buscarVueloObj(MDIPrincipal.gCarrito.getControlPosiciones().get(_posicionCompra).getCodigoVuelo());
        
            this.cboNumeroAsiento.setModel(vueloCompra.getCboNumeroAsntoModel());
        }
        if(MDIPrincipal.gCarrito.getListVuelos().size()!=0 || MDIPrincipal.gVuelo.getListVuelos().size() !=0){
            this.numPasajerosCache=MDIPrincipal.gCarrito.buscarVueloObj(MDIPrincipal.gCarrito.getControlPosiciones().get(_posicionCompra).getCodigoVuelo()).getListPasajerosVuelo().size();
            this.vuelo= MDIPrincipal.gVuelo.getListVuelos().get(MDIPrincipal.gCarrito.getControlPosiciones().get(_posicionCompra).getPosicionVuelo());
        }
            
    }
    //Vuelo vueloCompra=MDIPrincipal.gVuelo.buscarVueloObj(MDIPrincipal.gCarrito.getControlPosiciones().get(_posicionCompra).getCodigoVuelo());
 
    GestionPasajero pasajerosCache = new GestionPasajero();
    GestionAsientos asienCache=new GestionAsientos();
            
    public int getPosicionCompra() {
        return _posicionCompra;
    }

    public void setPosicionCompra(int _posicionCompra) {
        this._posicionCompra = _posicionCompra;
    }
    
    public void actualizarElementosTablaPasajeros(){
        String [] titulos ={"Código","DNI","Nombre","Apellido","Telefono","Correo Electronico","Tipo de Pasajero"};
        DefaultTableModel dt = new DefaultTableModel(pasajerosCache.getArrayModel(),titulos);
        this.jtPasajerosVuelo.setModel(dt);

    }

    public void actualizarElementosTablaAsientos(){
        String [] titulos ={"Código","Numero","Nombre"};
        DefaultTableModel dt = new DefaultTableModel(asienCache.getArrayModel(),titulos);
        this.jtAsientosReservados.setModel(dt);

    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        txtDNIPasajero = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNombresPasajero = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtaApellidosPasajero = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txTelPasajero = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtEmailPasajero = new javax.swing.JTextField();
        cboTipoPasajero = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtPasajerosVuelo = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        btnNuevoPasajero = new javax.swing.JButton();
        btnGuardarPasajero = new javax.swing.JButton();
        btnEliminarPasajero = new javax.swing.JButton();
        btnSiguienteVuelo = new javax.swing.JButton();
        cboTipoAsiento = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtAsientosReservados = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        cboNumeroAsiento = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtVueloCompra = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        btnIngresoInformacion = new javax.swing.JButton();
        btnNuevoAsiento = new javax.swing.JButton();
        btnGuardarAsiento = new javax.swing.JButton();
        btnEliminarAsiento = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jLabel1.setText("INFORMACION DE LA COMPRA");

        jLabel2.setText("DNI");

        txtDNIPasajero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDNIPasajeroActionPerformed(evt);
            }
        });

        jLabel3.setText("Nombres");

        jLabel4.setText("Apellidos");

        jLabel5.setText("Telefono");

        jLabel6.setText("Correo Electronico");

        cboTipoPasajero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboTipoPasajero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTipoPasajeroActionPerformed(evt);
            }
        });

        jLabel7.setText("Tipo de Pasajero");

        jtPasajerosVuelo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "DNI", "Nombres", "Apellidos", "Telefono", "Correo Electronico", "Tipo Pasajero"
            }
        ));
        jtPasajerosVuelo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jtPasajerosVueloMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jtPasajerosVuelo);

        jLabel8.setText("INGRESO DE PASAJEROS");

        btnNuevoPasajero.setText("Nuevo");
        btnNuevoPasajero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoPasajeroActionPerformed(evt);
            }
        });

        btnGuardarPasajero.setText("Guardar");
        btnGuardarPasajero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarPasajeroActionPerformed(evt);
            }
        });

        btnEliminarPasajero.setText("Eliminar");
        btnEliminarPasajero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarPasajeroActionPerformed(evt);
            }
        });

        btnSiguienteVuelo.setText("SIGUIENTE VUELO");
        btnSiguienteVuelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteVueloActionPerformed(evt);
            }
        });

        cboTipoAsiento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboTipoAsiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTipoAsientoActionPerformed(evt);
            }
        });

        jLabel9.setText("Categoria de Asiento");

        jtAsientosReservados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Codigo", "Numero", "Categoria"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jtAsientosReservados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jtAsientosReservadosMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(jtAsientosReservados);

        jLabel10.setText("ASIENTOS RESERVADOS");

        cboNumeroAsiento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboNumeroAsiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboNumeroAsientoActionPerformed(evt);
            }
        });

        jLabel11.setText("Numero de Asiento");

        jtVueloCompra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Origen", "Destino", "Fecha", "Precio", "Escalas"
            }
        ));
        jScrollPane3.setViewportView(jtVueloCompra);

        jLabel12.setText("VUELO A COMPRAR");

        btnIngresoInformacion.setText("INGRESAR INFORMACION");
        btnIngresoInformacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresoInformacionActionPerformed(evt);
            }
        });

        btnNuevoAsiento.setText("Nuevo Asiento");
        btnNuevoAsiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoAsientoActionPerformed(evt);
            }
        });

        btnGuardarAsiento.setText("Reservar");
        btnGuardarAsiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarAsientoActionPerformed(evt);
            }
        });

        btnEliminarAsiento.setText("Eliminar");
        btnEliminarAsiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarAsientoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(66, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(110, 110, 110)
                            .addComponent(btnNuevoPasajero)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnGuardarPasajero)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnEliminarPasajero)
                            .addContainerGap())
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel8)
                            .addGap(634, 634, 634))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(560, 560, 560))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtDNIPasajero, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtNombresPasajero, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtaApellidosPasajero, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txTelPasajero, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtEmailPasajero, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel7)
                                        .addGap(21, 21, 21)
                                        .addComponent(cboTipoPasajero, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(btnNuevoAsiento)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(btnGuardarAsiento)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(btnEliminarAsiento))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel11)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(cboNumeroAsiento, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel9)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(cboTipoAsiento, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGap(87, 87, 87)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(167, 167, 167)
                                                .addComponent(jLabel10))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(74, 74, 74)
                                                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(111, 111, 111)
                                                .addComponent(btnIngresoInformacion)
                                                .addGap(56, 56, 56)
                                                .addComponent(btnSiguienteVuelo)))))
                                .addGap(61, 61, 61))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(46, 46, 46)))
                        .addGap(569, 569, 569))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1264, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(73, 73, 73))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1264, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(252, 252, 252)
                        .addComponent(jLabel12)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtDNIPasajero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(txtNombresPasajero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(txtaApellidosPasajero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(txTelPasajero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(txtEmailPasajero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboTipoPasajero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNuevoPasajero)
                            .addComponent(btnGuardarPasajero)
                            .addComponent(btnEliminarPasajero))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(104, 104, 104)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnSiguienteVuelo, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnIngresoInformacion, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(141, 141, 141)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cboTipoAsiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cboNumeroAsiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(303, 303, 303)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnNuevoAsiento)
                                .addComponent(btnGuardarAsiento)
                                .addComponent(btnEliminarAsiento))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(64, 64, 64))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void actualizarElementosTablaVueloCarrito(){
        String[] titulos={"Codigo","Ciudad Origen","Ciudad Destino","Fecha y Hora Salida","Fecha y Hora Llegada","Escalas","Precio"};
        DefaultTableModel df=new DefaultTableModel(MDIPrincipal.gCarrito.getArrayModelVueloCarritoInfo(MDIPrincipal.gVuelo,this._posicionCompra),titulos);
        this.jtVueloCompra.setModel(df);
    }

    private void cboTipoPasajeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTipoPasajeroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboTipoPasajeroActionPerformed

    private void btnNuevoPasajeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoPasajeroActionPerformed
        // TODO add your handling code here:
        this._agregando=true;
        
    }//GEN-LAST:event_btnNuevoPasajeroActionPerformed

    private void cboTipoAsientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTipoAsientoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboTipoAsientoActionPerformed

    private void cboNumeroAsientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboNumeroAsientoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboNumeroAsientoActionPerformed

    private void btnSiguienteVueloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteVueloActionPerformed
        // TODO add your handling code here:
        
        //ARREGLAR EL BUG DEL CAMPO VACIO EN LA PANTALLA AL DAR SIGUIENTE
        if(_posicionCompra!=MDIPrincipal.gCarrito.getControlPosiciones().size()){
            Vuelo vuelo=new Vuelo();
            inicio(vuelo);
            DefaultTableModel model1 = (DefaultTableModel) this.jtVueloCompra.getModel();
            model1.setRowCount(0); 
            actualizarElementosTablaVueloCarrito();
            DefaultTableModel model2 = (DefaultTableModel) this.jtPasajerosVuelo.getModel();
            model2.setRowCount(0); 
            this.txtDNIPasajero.setText("");
            this.txtNombresPasajero.setText("");
            this.txtaApellidosPasajero.setText("");
            this.txTelPasajero.setText("");
            this.txtEmailPasajero.setText("");
            this.txtDNIPasajero.setText("");
            pasajerosCache.eliminarPasajerosCache();
            DefaultTableModel model = (DefaultTableModel) this.jtAsientosReservados.getModel();
            model.setRowCount(0); 
            asienCache.eliminarAsientosCache();
        }else{
            DefaultTableModel model1 = (DefaultTableModel) this.jtVueloCompra.getModel();
            model1.setRowCount(0); 
            actualizarElementosTablaVueloCarrito();
            DefaultTableModel model2 = (DefaultTableModel) this.jtPasajerosVuelo.getModel();
            model2.setRowCount(0); 
            this.txtDNIPasajero.setText("");
            
            this.txtNombresPasajero.setText("");
            this.txtaApellidosPasajero.setText("");
            this.txTelPasajero.setText("");
            this.txtEmailPasajero.setText("");
            this.txtDNIPasajero.setText("");
            pasajerosCache.eliminarPasajerosCache();
            DefaultTableModel model = (DefaultTableModel) this.jtAsientosReservados.getModel();
            model.setRowCount(0); 
            asienCache.eliminarAsientosCache();
            this.getDesktopPane().add(MDIPrincipal.frmPago);
            MDIPrincipal.frmPago.setVisible(true);
            this._posicionCompra=0;
            
        }
        
        
        
    }//GEN-LAST:event_btnSiguienteVueloActionPerformed

    private void btnIngresoInformacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresoInformacionActionPerformed
        // TODO add your handling code here:
        
        //SERVIRA PARA INGRESAR LA INFORMACION DE PASAJERO Y ASIENTOS AL VUELO
        //Ingreso pasajer
        /*
        for(int i=0; i<pasajerosCache.getListPasajero().size();i++){
            MDIPrincipal.gVuelo.getListVuelos().get(MDIPrincipal.gVuelo.getControlPosiciones().get(_posicionCompra).getPosicionVuelo()).agregarPasajeroVuelo(pasajerosCache.getListPasajero().get(i));
            
            System.out.println(MDIPrincipal.gVuelo.toString());
        }
        System.out.println("GVUELO CONTROLADORES REVISION");
        System.out.println(MDIPrincipal.gVuelo.toString());

        
        //ingreso asiento
        for(int j=0; j<asienCache.getAsientosVuelo().size(); j++){
            MDIPrincipal.gVuelo.getListVuelos().get(MDIPrincipal.gVuelo.getControlPosiciones().get(_posicionCompra).getPosicionVuelo()).agregarAsiento(asienCache.getAsientosVuelo().get(j));
        }
        */
        // Ingreso de pasajeros al vuelo (CACHE) por cliente     
        for(int i=0; i<pasajerosCache.getListPasajero().size();i++){  
           /*COMO MEJORA, OPTIMIZAR LA BUSQUEDA  DEL VUELO POR ITERACION
            YA QUE UN ELEMENTO DEL CARRITO PUEDE PERTENECER A UN MISMO CODIGO DE VUELO
           */
           
           MDIPrincipal.gCarrito.buscarVueloObj(MDIPrincipal.gCarrito.getControlPosiciones().get(this._posicionCompra).getCodigoVuelo()).agregarPasajeroVuelo(pasajerosCache.getPasajeroByIndex(i));
        }
        
        // Ingreso de asientos al vuelo (CACHE) por cliente     
        for(int j=0; j<asienCache.getAsientosVuelo().size();j++){   
           /*COMO MEJORA, OPTIMIZAR LA BUSQUEDA  DEL VUELO POR ITERACION
            YA QUE UN ELEMENTO DEL CARRITO PUEDE PERTENECER A UN MISMO CODIGO DE VUELO
            */
           
           MDIPrincipal.gCarrito.buscarVueloObj(MDIPrincipal.gCarrito.getControlPosiciones().get(this._posicionCompra).getCodigoVuelo()).agregarAsiento(asienCache.getAsientoByIndex(j));
        }
        
        
        AdminSerializacion.serializacion(MDIPrincipal.gCarrito,"gCarrito.obj");
        JOptionPane.showMessageDialog(this, "Informacion Agregada Correctamente, Ahora Pase al Siguiente Vuelo");
        
        //AdminSerializacion.serializacion(MDIPrincipal.gVuelo, "gVuelo.obj");
    }//GEN-LAST:event_btnIngresoInformacionActionPerformed

    private void btnNuevoAsientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoAsientoActionPerformed
        // TODO add your handling code here:
        this._agregandoAsiento=true;
    }//GEN-LAST:event_btnNuevoAsientoActionPerformed

    private void txtDNIPasajeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDNIPasajeroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDNIPasajeroActionPerformed

    private void btnGuardarPasajeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarPasajeroActionPerformed
        // TODO add your handling code here:
        try{
        //int cacheValue= MDIPrincipal.gCarrito
        String dni,nombres,apellidos,telefono,email;
        dni=this.txtDNIPasajero.getText();
        nombres=this.txtNombresPasajero.getText();
        apellidos=this.txtaApellidosPasajero.getText();
        telefono=this.txTelPasajero.getText();
        email=this.txtEmailPasajero.getText();
        
        Pasajero pasajero = new Pasajero();
        pasajero.set_dni(dni);
        pasajero.set_nombre(nombres);
        pasajero.set_apellido(apellidos);
        pasajero.set_telefono(telefono);
        pasajero.set_correoElectronico(email);
        
        //AGREGANDO TIPO DE PASAJERO
        pasajero.set_descripcionPasajero(MDIPrincipal.gPasajero.getTipoPasajeroByIndex(this.cboTipoPasajero.getSelectedIndex()));
        //AGREGANDO CODIGO DE PASAJERO
        //int totalPasajeros= MDIPrincipal.gVuelo.buscarVueloObj(MDIPrincipal.gCarrito.getControlPosiciones().get(_posicionCompra).getCodigoVuelo()).listPasajerosVuelo.size();
        /*USAR AL ARREGLAR EL BUG DE LOS CODIGOS*/
        //Vuelo vuelo= MDIPrincipal.gVuelo.buscarVueloObj(MDIPrincipal.gCarrito.getControlPosiciones().get(_posicionCompra).getCodigoVuelo());
        //Vuelo vuelo= MDIPrincipal.gVuelo.getListVuelos().get(MDIPrincipal.gCarrito.getControlPosiciones().get(_posicionCompra).getPosicionVuelo());
        //int numPasajeros=vuelo.listPasajerosVuelo.size();
        
        /**
           PARA TRABAJAR CON LOS CODIGOS DE PASAJEROS Y ASIENTOS AUTOMATICOS
         
         * HACER UN ALGORITMO QUE LLAME EL NUMERO DE PASAJEROS METIDOS EN EL SISTEMA //hecho
         * PARA PODERLE ASIGNAR EL SIGUIENTE NUMERO AL PASAJERO REGISTRADO //hecho
         * TIENE QUE SOPORTAR EL ELIMINADO DE CUALQUIER PASAJERO HECHO POR EL CLIENTE, TENDRIA QUE VOLVER A GENERAR LOS CODIGOS QUITANDO ESE NUMERO DE PASAJERO ELIMINADO // falta
          
         */
        //String codigoVuelo = vuelo.get_codigoVuelo();
        
        this._numPsjrsCache++;
        /*HACER EL CODIGO PNUM HACER NUM DINAMICO CON EL NUMERO DE PASAJEROS EN EL VUELO*/
        pasajero.set_codigoPasajero(this.vuelo.get_codigoVuelo()+"P"+Integer.toString(this.vuelo.listPasajerosVuelo.size()+numPasajerosCache+_numPsjrsCache));
        
        
        if(_agregando){
             //pasos para agregar
            /**
            * 1. Solicitar los valores al usuario
            * 2. Crear la instancia
            * 3. setear los valores de la instancia
            * 4. Agregar la instancia de Aeropuerto a la gestion
            * 5. Mostrar los valores
            */


            pasajerosCache.agregarPasajero(pasajero);
            //MDIPrincipal.gVuelo.buscarVueloObj(MDIPrincipal.gCarrito.getControlPosiciones().get(_posicionCompra).getCodigoVuelo()).agregarPasajeroVuelo(pasajero); es la oficial
            actualizarElementosTablaPasajeros();
            //AdminSerializacion.serializacion(MDIPrincipal.gVuelo, "gAvion.obj");
            
                    
              
        }else{
            
            //pasos para Modificar
            /**
             * 1. Solicitar los nuevos valores al usuario 2. Crear la
             * instancia modificada 3. setear los valores de la instancia
             * modificada 4. Modificar la instancia de Aeropuerto a la
             * gestion 5. Mostrar los valores en la tabla
             */
            pasajerosCache.modificarPasajero(_indiceSeleccion, pasajero);
            //AdminSerializacion.serializacion(MDIPrincipal.gVuelo, "gAvion.obj");
            
        }
        actualizarElementosTablaPasajeros();
        //actualizarElementosTabla();
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Ha ocurrido un error" +e.getMessage());
        }
        
    }//GEN-LAST:event_btnGuardarPasajeroActionPerformed

    private void jtPasajerosVueloMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtPasajerosVueloMousePressed
        // TODO add your handling code here:
        _indiceSeleccion = this.jtPasajerosVuelo.getSelectedRow();

        if(_indiceSeleccion!= -1){
            Pasajero _psjr = pasajerosCache.getPasajeroByIndex(_indiceSeleccion);
            mostrarElemento(_psjr);
        }
    }//GEN-LAST:event_jtPasajerosVueloMousePressed

    private void btnEliminarPasajeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarPasajeroActionPerformed
        // TODO add your handling code here:
         if(_indiceSeleccion>=0){
         int resultado = JOptionPane.showConfirmDialog(null, "¿Está seguro?", "Warning", JOptionPane.YES_NO_OPTION);
                if(resultado==JOptionPane.YES_OPTION){
                try{
                    //BORRA LA PANTALLA
                    DefaultTableModel model = (DefaultTableModel) this.jtPasajerosVuelo.getModel();
                    model.setRowCount(0);
                    //ELIMINA PASAJERO
                    pasajerosCache.eliminarPasajeroPorIndice(_indiceSeleccion);
                    
                    //REHACER LOS CODIGOS DE NUEVO
                    this._numPsjrsCache--;
                    System.out.println(_numPsjrsCache);
                    System.out.println(pasajerosCache.getListPasajero().size());
                    for(int i=0; i<pasajerosCache.getListPasajero().size(); i++){
                        System.out.println(i);
                        /**
                         * VUELVE A SETEAR EL CODIGO DE LOS PASAJEROS
                         */
                        pasajerosCache.getListPasajero().get(i).set_codigoPasajero(this.vuelo.get_codigoVuelo()+"P"+Integer.toString(this.vuelo.listPasajerosVuelo.size()+numPasajerosCache+i+1));
                    }
                    actualizarElementosTablaPasajeros();
                    //Paso para Serializar informacion
                   //AdminSerializacion.serializacion(MDIPrincipal.gRuta, "gRuta.obj");
                }catch(Exception e){
                    JOptionPane.showMessageDialog(this,"Ha ocurrido un error al eliminar"+e.getMessage());
                }
            }
        }
        else{
           JOptionPane.showMessageDialog(this, "Favor seleccione el elemento de la tabla que desea eliminar"); 
        }
    }//GEN-LAST:event_btnEliminarPasajeroActionPerformed

    private void btnGuardarAsientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarAsientoActionPerformed
        // TODO add your handling code here:
        //try{
            Asientos asiento=new Asientos();
            asiento.set_categoria(vueloCompra.getTipoAsientoByIndex(this.cboTipoAsiento.getSelectedIndex()));
            asiento.set_numero(vueloCompra.getNumAsientoByIndex(this.cboNumeroAsiento.getSelectedIndex()));
            asiento.set_codigoAsiento(vueloCompra.get_codigoVuelo()+"A"+asiento.get_categoria()+Integer.toString(asienCache.getAsientosVuelo().size()+1));


            if(_agregandoAsiento){
                 //pasos para agregar
                /**
                * 1. Solicitar los valores al usuario
                * 2. Crear la instancia
                * 3. setear los valores de la instancia
                * 4. Agregar la instancia de Aeropuerto a la gestion
                * 5. Mostrar los valores
                */


                asienCache.agregarAsiento(asiento);
                //MDIPrincipal.gVuelo.buscarVueloObj(MDIPrincipal.gCarrito.getControlPosiciones().get(_posicionCompra).getCodigoVuelo()).agregarPasajeroVuelo(pasajero); es la oficial
                actualizarElementosTablaAsientos();
                //AdminSerializacion.serializacion(MDIPrincipal.gVuelo, "gAvion.obj");
                this._agregandoAsiento=false;


            }
        //}catch(Exception e){
            //JOptionPane.showMessageDialog(this,"Ha ocurrido un error al eliminar"+e.getMessage());
        //}
        
    }//GEN-LAST:event_btnGuardarAsientoActionPerformed

    private void btnEliminarAsientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarAsientoActionPerformed
        // TODO add your handling code here:
         if(_indiceSeleccionAs>=0){
         int resultado = JOptionPane.showConfirmDialog(null, "¿Está seguro?", "Warning", JOptionPane.YES_NO_OPTION);
                if(resultado==JOptionPane.YES_OPTION){
                try{
                    asienCache.eliminarAsientoPorIndice(_indiceSeleccionAs);
                    actualizarElementosTablaAsientos();
                    //Paso para Serializar informacion
                   //AdminSerializacion.serializacion(MDIPrincipal.gRuta, "gRuta.obj");
                }catch(Exception e){
                    JOptionPane.showMessageDialog(this,"Ha ocurrido un error al eliminar"+e.getMessage());
                }
            }
        }
        else{
           JOptionPane.showMessageDialog(this, "Favor seleccione el elemento de la tabla que desea eliminar"); 
        }        

    }//GEN-LAST:event_btnEliminarAsientoActionPerformed

    private void jtAsientosReservadosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtAsientosReservadosMousePressed
        // TODO add your handling code here:
        _indiceSeleccionAs = this.jtAsientosReservados.getSelectedRow();

        if(_indiceSeleccion!= -1){
            JOptionPane.showMessageDialog(this, "Informacion Seleccionada, Presione el Boton Eliminar, desea eliminar el asiento de la reserva");
        }
    }//GEN-LAST:event_jtAsientosReservadosMousePressed
    public void mostrarElemento(Pasajero _psjr){
        this.txtDNIPasajero.setText(_psjr.get_dni());
        this.txtNombresPasajero.setText(_psjr.get_nombre());
        this.txtaApellidosPasajero.setText(_psjr.get_apellido());
        this.txTelPasajero.setText(_psjr.get_telefono());
        this.txtEmailPasajero.setText(_psjr.get_correoElectronico());
        

        String _psjr1= _psjr.get_descripcionPasajero();

        int _indice=pasajerosCache.buscarPasajero(_psjr.get_codigoPasajero());
        this.cboTipoPasajero.setSelectedIndex(_indice);
        

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminarAsiento;
    private javax.swing.JButton btnEliminarPasajero;
    private javax.swing.JButton btnGuardarAsiento;
    private javax.swing.JButton btnGuardarPasajero;
    private javax.swing.JButton btnIngresoInformacion;
    private javax.swing.JButton btnNuevoAsiento;
    private javax.swing.JButton btnNuevoPasajero;
    private javax.swing.JButton btnSiguienteVuelo;
    private javax.swing.JComboBox<String> cboNumeroAsiento;
    private javax.swing.JComboBox<String> cboTipoAsiento;
    private javax.swing.JComboBox<String> cboTipoPasajero;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTable jtAsientosReservados;
    private javax.swing.JTable jtPasajerosVuelo;
    private javax.swing.JTable jtVueloCompra;
    private javax.swing.JTextField txTelPasajero;
    private javax.swing.JTextField txtDNIPasajero;
    private javax.swing.JTextField txtEmailPasajero;
    private javax.swing.JTextField txtNombresPasajero;
    private javax.swing.JTextField txtaApellidosPasajero;
    // End of variables declaration//GEN-END:variables
}
